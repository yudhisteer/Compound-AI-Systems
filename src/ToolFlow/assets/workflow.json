[{"state":{"code":"%%{init: {'theme': 'forest'}}%%\nflowchart TD\n    Start([User Query]) --> MainLoop[AppRunner Loop]\n    MainLoop --> TriageAgent[Triage Agent]\n    \n    subgraph AgentRouter[\"Agent Router\"]\n        TriageAgent --> LostBaggage{Is it about lost baggage?}\n        TriageAgent --> FlightMod{Is it about flight modification?}\n        TriageAgent -.-> Escalate1[Escalate to Human]\n        \n        LostBaggage -- Yes --> TransferLostBaggage[transfer_to_lost_baggage]\n        TransferLostBaggage --> LostBaggageAgent[Lost Baggage Agent]\n        FlightMod -- Yes --> TransferFlightMod[transfer_to_flight_modification]\n        TransferFlightMod --> FlightModificationAgent[Flight Modification Agent]\n    end\n    \n    subgraph FlightModRouter[\"Flight Modification Router\"]\n        FlightModificationAgent --> Cancel{Wants to cancel flight?}\n        FlightModificationAgent --> Change{Wants to change flight?}\n        \n        Cancel -- Yes --> TransferFlightCancel[transfer_to_flight_cancel]\n        TransferFlightCancel --> FlightCancelAgent[Flight Cancel Agent]\n        Change -- Yes --> TransferFlightChange[transfer_to_flight_change]\n        TransferFlightChange --> FlightChangeAgent[Flight Change Agent]\n    end\n    \n    subgraph LostBaggageProcess[\"Lost Baggage Process\"]\n        LostBaggageAgent --> InitBaggageSearch[initiate_baggage_search]\n        InitBaggageSearch --> InitSearch[Initiate Baggage Search]\n        InitSearch --> Found{Baggage Found?}\n        Found -- Yes --> Deliver[Arrange Delivery]\n        Found -- No --> EscalateHuman2[escalate_to_human]\n        EscalateHuman2 --> Escalate2[Escalate to Human]\n        Deliver --> CaseResolved1[case_resolved]\n        CaseResolved1 --> Resolved1[Case Resolved]\n    end\n    \n    subgraph FlightCancelProcess[\"Flight Cancellation Process\"]\n        FlightCancelAgent --> ConfirmFlight[Confirm Flight Details]\n        ConfirmFlight --> SameFlight{Same Flight?}\n        SameFlight -- No --> EscalateHuman3[escalate_to_human]\n        EscalateHuman3 --> Escalate3[Escalate to Human]\n        SameFlight -- Yes --> RefundOrCredit{Refund or Credits?}\n        RefundOrCredit -- Refund --> InitiateRefund[initiate_refund]\n        InitiateRefund --> ProcessRefund[Process Refund]\n        RefundOrCredit -- Credits --> InitiateCredits[initiate_flight_credits]\n        InitiateCredits --> IssueCredits[Issue Flight Credits]\n        ProcessRefund --> RefundNotify[Notify: 3-5 Business Days]\n        IssueCredits --> CreditsNotify[Notify: Available in 15 Minutes]\n        RefundNotify --> CaseResolved2[case_resolved]\n        CreditsNotify --> CaseResolved2\n        CaseResolved2 --> Resolved2[Case Resolved]\n    end\n    \n    subgraph FlightChangeProcess[\"Flight Change Process\"]\n        FlightChangeAgent --> VerifyDetails[Verify Flight Details]\n        VerifyDetails --> ValidToChange[valid_to_change_flight]\n        ValidToChange --> Valid{Valid to Change?}\n        Valid -- No --> NotEligible[Inform Customer Not Eligible]\n        Valid -- Yes --> SuggestFlight[Suggest One Day Earlier]\n        SuggestFlight --> CheckSeats[Check Seat Availability]\n        CheckSeats --> Available{Seats Available?}\n        Available -- No --> AlternativeFlight[Offer Alternative Flights]\n        Available -- Yes --> InformFees[Inform of Any Fees]\n        InformFees --> ChangeFlight[change_flight]\n        ChangeFlight --> ProcessChange[Process Flight Change]\n        NotEligible --> CaseResolved3[case_resolved]\n        ProcessChange --> CaseResolved3\n        AlternativeFlight --> CaseResolved3\n        CaseResolved3 --> Resolved3[Case Resolved]\n    end\n    \n    subgraph AgentCommunication[\"Agent Communication Flow\"]\n        UserInput[User Message] --> OpenAIRequest[Create OpenAI Request]\n        OpenAIRequest --> LLMResponse[LLM Response]\n        LLMResponse --> CheckToolCalls{Tool Calls Present?}\n        CheckToolCalls -- Yes --> HandleTools[ToolCallHandler]\n        CheckToolCalls -- No --> AddToHistory[Add to Message History]\n        HandleTools --> ExecuteFunction[Execute Function]\n        ExecuteFunction --> AgentSwitch{Switch Agent?}\n        AgentSwitch -- Yes --> NewAgent[Set New Active Agent]\n        AgentSwitch -- No --> AddToolResponse[Add Tool Response]\n        NewAgent --> AddToHistory\n        AddToolResponse --> AddToHistory\n        AddToHistory --> NextIteration{Continue Loop?}\n        NextIteration -- Yes --> UserInput\n        NextIteration -- No --> FinalResponse[Return TaskResponse]\n    end\n    \n    Escalate1 --> End([End Conversation])\n    Escalate2 --> End\n    Escalate3 --> End\n    Resolved1 --> End\n    Resolved2 --> End\n    Resolved3 --> End\n    FinalResponse --> End\n    \n    classDef agentNode fill:#f9f,stroke:#333,stroke-width:2px;\n    classDef toolNode fill:#bbf,stroke:#333,stroke-width:1px;\n    classDef decisionNode fill:#ff9,stroke:#333,stroke-width:1px;\n    classDef endNode fill:#9f9,stroke:#333,stroke-width:2px;\n    \n    class TriageAgent,LostBaggageAgent,FlightModificationAgent,FlightCancelAgent,FlightChangeAgent agentNode;\n    class InitSearch,ProcessRefund,IssueCredits,ProcessChange,ExecuteFunction toolNode;\n    class LostBaggage,FlightMod,Cancel,Change,Found,RefundOrCredit,Valid,Available,CheckToolCalls,AgentSwitch,NextIteration,SameFlight decisionNode;\n    class Resolved1,Resolved2,Resolved3,End,FinalResponse endNode;","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":true,"panZoom":true,"pan":{"x":-1164.201301413163,"y":-339.9360062109897},"zoom":4.172771763288829},"time":1742676941353,"type":"auto","id":"2084f04e-f792-4962-b28c-4372b5877e36","name":"damp-keyboard"},{"state":{"code":"%%{init: {'theme': 'forest'}}%%\nflowchart TD\n    Start([User Query]) --> MainLoop[AppRunner Loop]\n    MainLoop --> TriageAgent[Triage Agent]\n    \n    subgraph AgentRouter[\"Agent Router\"]\n        TriageAgent --> LostBaggage{Is it about lost baggage?}\n        TriageAgent --> FlightMod{Is it about flight modification?}\n        TriageAgent -.-> Escalate1[Escalate to Human]\n        \n        LostBaggage -- Yes --> TransferLostBaggage[transfer_to_lost_baggage]\n        TransferLostBaggage --> LostBaggageAgent[Lost Baggage Agent]\n        FlightMod -- Yes --> TransferFlightMod[transfer_to_flight_modification]\n        TransferFlightMod --> FlightModificationAgent[Flight Modification Agent]\n    end\n    \n    subgraph FlightModRouter[\"Flight Modification Router\"]\n        FlightModificationAgent --> Cancel{Wants to cancel flight?}\n        FlightModificationAgent --> Change{Wants to change flight?}\n        \n        Cancel -- Yes --> TransferFlightCancel[transfer_to_flight_cancel]\n        TransferFlightCancel --> FlightCancelAgent[Flight Cancel Agent]\n        Change -- Yes --> TransferFlightChange[transfer_to_flight_change]\n        TransferFlightChange --> FlightChangeAgent[Flight Change Agent]\n    end\n    \n    subgraph LostBaggageProcess[\"Lost Baggage Process\"]\n        LostBaggageAgent --> InitBaggageSearch[initiate_baggage_search]\n        InitBaggageSearch --> InitSearch[Initiate Baggage Search]\n        InitSearch --> Found{Baggage Found?}\n        Found -- Yes --> Deliver[Arrange Delivery]\n        Found -- No --> EscalateHuman2[escalate_to_human]\n        EscalateHuman2 --> Escalate2[Escalate to Human]\n        Deliver --> CaseResolved1[case_resolved]\n        CaseResolved1 --> Resolved1[Case Resolved]\n    end\n    \n    subgraph FlightCancelProcess[\"Flight Cancellation Process\"]\n        FlightCancelAgent --> ConfirmFlight[Confirm Flight Details]\n        ConfirmFlight --> SameFlight{Same Flight?}\n        SameFlight -- No --> EscalateHuman3[escalate_to_human]\n        EscalateHuman3 --> Escalate3[Escalate to Human]\n        SameFlight -- Yes --> RefundOrCredit{Refund or Credits?}\n        RefundOrCredit -- Refund --> InitiateRefund[initiate_refund]\n        InitiateRefund --> ProcessRefund[Process Refund]\n        RefundOrCredit -- Credits --> InitiateCredits[initiate_flight_credits]\n        InitiateCredits --> IssueCredits[Issue Flight Credits]\n        ProcessRefund --> RefundNotify[Notify: 3-5 Business Days]\n        IssueCredits --> CreditsNotify[Notify: Available in 15 Minutes]\n        RefundNotify --> CaseResolved2[case_resolved]\n        CreditsNotify --> CaseResolved2\n        CaseResolved2 --> Resolved2[Case Resolved]\n    end\n    \n    subgraph FlightChangeProcess[\"Flight Change Process\"]\n        FlightChangeAgent --> VerifyDetails[Verify Flight Details]\n        VerifyDetails --> ValidToChange[valid_to_change_flight]\n        ValidToChange --> Valid{Valid to Change?}\n        Valid -- No --> NotEligible[Inform Customer Not Eligible]\n        Valid -- Yes --> SuggestFlight[Suggest One Day Earlier]\n        SuggestFlight --> CheckSeats[Check Seat Availability]\n        CheckSeats --> Available{Seats Available?}\n        Available -- No --> AlternativeFlight[Offer Alternative Flights]\n        Available -- Yes --> InformFees[Inform of Any Fees]\n        InformFees --> ChangeFlight[change_flight]\n        ChangeFlight --> ProcessChange[Process Flight Change]\n        NotEligible --> CaseResolved3[case_resolved]\n        ProcessChange --> CaseResolved3\n        AlternativeFlight --> CaseResolved3\n        CaseResolved3 --> Resolved3[Case Resolved]\n    end\n    \n    subgraph AgentCommunication[\"Agent Communication Flow\"]\n        UserInput[User Message] --> OpenAIRequest[Create OpenAI Request]\n        OpenAIRequest --> LLMResponse[LLM Response]\n        LLMResponse --> CheckToolCalls{Tool Calls Present?}\n        CheckToolCalls -- Yes --> HandleTools[ToolCallHandler]\n        CheckToolCalls -- No --> AddToHistory[Add to Message History]\n        HandleTools --> ExecuteFunction[Execute Function]\n        ExecuteFunction --> AgentSwitch{Switch Agent?}\n        AgentSwitch -- Yes --> NewAgent[Set New Active Agent]\n        AgentSwitch -- No --> AddToolResponse[Add Tool Response]\n        NewAgent --> AddToHistory\n        AddToolResponse --> AddToHistory\n        AddToHistory --> NextIteration{Continue Loop?}\n        NextIteration -- Yes --> UserInput\n        NextIteration -- No --> FinalResponse[Return TaskResponse]\n    end\n    \n    Escalate1 --> End([End Conversation])\n    Escalate2 --> End\n    Escalate3 --> End\n    Resolved1 --> End\n    Resolved2 --> End\n    Resolved3 --> End\n    FinalResponse --> End\n    \n    classDef agentNode fill:#f9f,stroke:#333,stroke-width:2px;\n    classDef toolNode fill:#bbf,stroke:#333,stroke-width:1px;\n    classDef decisionNode fill:#ff9,stroke:#333,stroke-width:1px;\n    classDef endNode fill:#9f9,stroke:#333,stroke-width:2px;\n    \n    class TriageAgent,LostBaggageAgent,FlightModificationAgent,FlightCancelAgent,FlightChangeAgent agentNode;\n    class InitSearch,ProcessRefund,IssueCredits,ProcessChange,ExecuteFunction toolNode;\n    class LostBaggage,FlightMod,Cancel,Change,Found,RefundOrCredit,Valid,Available,CheckToolCalls,AgentSwitch,NextIteration,SameFlight decisionNode;\n    class Resolved1,Resolved2,Resolved3,End,FinalResponse endNode;","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":true,"panZoom":true,"pan":{"x":-552.2013246098938,"y":-81.93598197720978},"zoom":4.172771763288829},"time":1742676881363,"type":"auto","id":"9ab18d92-3bf0-44db-9b4e-1de77822489f","name":"bright-salesmen"},{"state":{"code":"%%{init: {'theme': 'forest'}}%%\nflowchart TD\n    Start([User Query]) --> MainLoop[AppRunner Loop]\n    MainLoop --> TriageAgent[Triage Agent]\n    \n    subgraph AgentRouter[\"Agent Router\"]\n        TriageAgent --> LostBaggage{Is it about lost baggage?}\n        TriageAgent --> FlightMod{Is it about flight modification?}\n        TriageAgent -.-> Escalate1[Escalate to Human]\n        \n        LostBaggage -- Yes --> TransferLostBaggage[transfer_to_lost_baggage]\n        TransferLostBaggage --> LostBaggageAgent[Lost Baggage Agent]\n        FlightMod -- Yes --> TransferFlightMod[transfer_to_flight_modification]\n        TransferFlightMod --> FlightModificationAgent[Flight Modification Agent]\n    end\n    \n    subgraph FlightModRouter[\"Flight Modification Router\"]\n        FlightModificationAgent --> Cancel{Wants to cancel flight?}\n        FlightModificationAgent --> Change{Wants to change flight?}\n        \n        Cancel -- Yes --> TransferFlightCancel[transfer_to_flight_cancel]\n        TransferFlightCancel --> FlightCancelAgent[Flight Cancel Agent]\n        Change -- Yes --> TransferFlightChange[transfer_to_flight_change]\n        TransferFlightChange --> FlightChangeAgent[Flight Change Agent]\n    end\n    \n    subgraph LostBaggageProcess[\"Lost Baggage Process\"]\n        LostBaggageAgent --> InitBaggageSearch[initiate_baggage_search]\n        InitBaggageSearch --> InitSearch[Initiate Baggage Search]\n        InitSearch --> Found{Baggage Found?}\n        Found -- Yes --> Deliver[Arrange Delivery]\n        Found -- No --> EscalateHuman2[escalate_to_human]\n        EscalateHuman2 --> Escalate2[Escalate to Human]\n        Deliver --> CaseResolved1[case_resolved]\n        CaseResolved1 --> Resolved1[Case Resolved]\n    end\n    \n    subgraph FlightCancelProcess[\"Flight Cancellation Process\"]\n        FlightCancelAgent --> ConfirmFlight[Confirm Flight Details]\n        ConfirmFlight --> SameFlight{Same Flight?}\n        SameFlight -- No --> EscalateHuman3[escalate_to_human]\n        EscalateHuman3 --> Escalate3[Escalate to Human]\n        SameFlight -- Yes --> RefundOrCredit{Refund or Credits?}\n        RefundOrCredit -- Refund --> InitiateRefund[initiate_refund]\n        InitiateRefund --> ProcessRefund[Process Refund]\n        RefundOrCredit -- Credits --> InitiateCredits[initiate_flight_credits]\n        InitiateCredits --> IssueCredits[Issue Flight Credits]\n        ProcessRefund --> RefundNotify[Notify: 3-5 Business Days]\n        IssueCredits --> CreditsNotify[Notify: Available in 15 Minutes]\n        RefundNotify --> CaseResolved2[case_resolved]\n        CreditsNotify --> CaseResolved2\n        CaseResolved2 --> Resolved2[Case Resolved]\n    end\n    \n    subgraph FlightChangeProcess[\"Flight Change Process\"]\n        FlightChangeAgent --> VerifyDetails[Verify Flight Details]\n        VerifyDetails --> ValidToChange[valid_to_change_flight]\n        ValidToChange --> Valid{Valid to Change?}\n        Valid -- No --> NotEligible[Inform Customer Not Eligible]\n        Valid -- Yes --> SuggestFlight[Suggest One Day Earlier]\n        SuggestFlight --> CheckSeats[Check Seat Availability]\n        CheckSeats --> Available{Seats Available?}\n        Available -- No --> AlternativeFlight[Offer Alternative Flights]\n        Available -- Yes --> InformFees[Inform of Any Fees]\n        InformFees --> ChangeFlight[change_flight]\n        ChangeFlight --> ProcessChange[Process Flight Change]\n        NotEligible --> CaseResolved3[case_resolved]\n        ProcessChange --> CaseResolved3\n        AlternativeFlight --> CaseResolved3\n        CaseResolved3 --> Resolved3[Case Resolved]\n    end\n    \n    subgraph AgentCommunication[\"Agent Communication Flow\"]\n        UserInput[User Message] --> OpenAIRequest[Create OpenAI Request]\n        OpenAIRequest --> LLMResponse[LLM Response]\n        LLMResponse --> CheckToolCalls{Tool Calls Present?}\n        CheckToolCalls -- Yes --> HandleTools[ToolCallHandler]\n        CheckToolCalls -- No --> AddToHistory[Add to Message History]\n        HandleTools --> ExecuteFunction[Execute Function]\n        ExecuteFunction --> AgentSwitch{Switch Agent?}\n        AgentSwitch -- Yes --> NewAgent[Set New Active Agent]\n        AgentSwitch -- No --> AddToolResponse[Add Tool Response]\n        NewAgent --> AddToHistory\n        AddToolResponse --> AddToHistory\n        AddToHistory --> NextIteration{Continue Loop?}\n        NextIteration -- Yes --> UserInput\n        NextIteration -- No --> FinalResponse[Return TaskResponse]\n    end\n    \n    Escalate1 --> End([End Conversation])\n    Escalate2 --> End\n    Escalate3 --> End\n    Resolved1 --> End\n    Resolved2 --> End\n    Resolved3 --> End\n    FinalResponse --> End\n    \n    classDef agentNode fill:#f9f,stroke:#333,stroke-width:2px;\n    classDef toolNode fill:#bbf,stroke:#333,stroke-width:1px;\n    classDef decisionNode fill:#ff9,stroke:#333,stroke-width:1px;\n    classDef endNode fill:#9f9,stroke:#333,stroke-width:2px;\n    \n    class TriageAgent,LostBaggageAgent,FlightModificationAgent,FlightCancelAgent,FlightChangeAgent agentNode;\n    class InitSearch,ProcessRefund,IssueCredits,ProcessChange,ExecuteFunction toolNode;\n    class LostBaggage,FlightMod,Cancel,Change,Found,RefundOrCredit,Valid,Available,CheckToolCalls,AgentSwitch,NextIteration,SameFlight decisionNode;\n    class Resolved1,Resolved2,Resolved3,End,FinalResponse endNode;","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":true,"panZoom":true,"pan":{"x":-234.37916543634822,"y":-287.81583904901356},"zoom":3.504866933235445},"time":1742676821355,"type":"auto","id":"022dff19-62b4-4dd8-b9a0-6b830035e1fb","name":"appetizing-carpenter"},{"state":{"code":"%%{init: {'theme': 'forest'}}%%\nflowchart TD\n    Start([User Query]) --> MainLoop[AppRunner Loop]\n    MainLoop --> TriageAgent[Triage Agent]\n    \n    subgraph AgentRouter[\"Agent Router\"]\n        TriageAgent --> LostBaggage{Is it about lost baggage?}\n        TriageAgent --> FlightMod{Is it about flight modification?}\n        TriageAgent -.-> Escalate1[Escalate to Human]\n        \n        LostBaggage -- Yes --> TransferLostBaggage[transfer_to_lost_baggage]\n        TransferLostBaggage --> LostBaggageAgent[Lost Baggage Agent]\n        FlightMod -- Yes --> TransferFlightMod[transfer_to_flight_modification]\n        TransferFlightMod --> FlightModificationAgent[Flight Modification Agent]\n    end\n    \n    subgraph FlightModRouter[\"Flight Modification Router\"]\n        FlightModificationAgent --> Cancel{Wants to cancel flight?}\n        FlightModificationAgent --> Change{Wants to change flight?}\n        \n        Cancel -- Yes --> TransferFlightCancel[transfer_to_flight_cancel]\n        TransferFlightCancel --> FlightCancelAgent[Flight Cancel Agent]\n        Change -- Yes --> TransferFlightChange[transfer_to_flight_change]\n        TransferFlightChange --> FlightChangeAgent[Flight Change Agent]\n    end\n    \n    subgraph LostBaggageProcess[\"Lost Baggage Process\"]\n        LostBaggageAgent --> InitBaggageSearch[initiate_baggage_search]\n        InitBaggageSearch --> InitSearch[Initiate Baggage Search]\n        InitSearch --> Found{Baggage Found?}\n        Found -- Yes --> Deliver[Arrange Delivery]\n        Found -- No --> EscalateHuman2[escalate_to_human]\n        EscalateHuman2 --> Escalate2[Escalate to Human]\n        Deliver --> CaseResolved1[case_resolved]\n        CaseResolved1 --> Resolved1[Case Resolved]\n    end\n    \n    subgraph FlightCancelProcess[\"Flight Cancellation Process\"]\n        FlightCancelAgent --> ConfirmFlight[Confirm Flight Details]\n        ConfirmFlight --> SameFlight{Same Flight?}\n        SameFlight -- No --> EscalateHuman3[escalate_to_human]\n        EscalateHuman3 --> Escalate3[Escalate to Human]\n        SameFlight -- Yes --> RefundOrCredit{Refund or Credits?}\n        RefundOrCredit -- Refund --> InitiateRefund[initiate_refund]\n        InitiateRefund --> ProcessRefund[Process Refund]\n        RefundOrCredit -- Credits --> InitiateCredits[initiate_flight_credits]\n        InitiateCredits --> IssueCredits[Issue Flight Credits]\n        ProcessRefund --> RefundNotify[Notify: 3-5 Business Days]\n        IssueCredits --> CreditsNotify[Notify: Available in 15 Minutes]\n        RefundNotify --> CaseResolved2[case_resolved]\n        CreditsNotify --> CaseResolved2\n        CaseResolved2 --> Resolved2[Case Resolved]\n    end\n    \n    subgraph FlightChangeProcess[\"Flight Change Process\"]\n        FlightChangeAgent --> VerifyDetails[Verify Flight Details]\n        VerifyDetails --> ValidToChange[valid_to_change_flight]\n        ValidToChange --> Valid{Valid to Change?}\n        Valid -- No --> NotEligible[Inform Customer Not Eligible]\n        Valid -- Yes --> SuggestFlight[Suggest One Day Earlier]\n        SuggestFlight --> CheckSeats[Check Seat Availability]\n        CheckSeats --> Available{Seats Available?}\n        Available -- No --> AlternativeFlight[Offer Alternative Flights]\n        Available -- Yes --> InformFees[Inform of Any Fees]\n        InformFees --> ChangeFlight[change_flight]\n        ChangeFlight --> ProcessChange[Process Flight Change]\n        NotEligible --> CaseResolved3[case_resolved]\n        ProcessChange --> CaseResolved3\n        AlternativeFlight --> CaseResolved3\n        CaseResolved3 --> Resolved3[Case Resolved]\n    end\n    \n    subgraph AgentCommunication[\"Agent Communication Flow\"]\n        UserInput[User Message] --> OpenAIRequest[Create OpenAI Request]\n        OpenAIRequest --> LLMResponse[LLM Response]\n        LLMResponse --> CheckToolCalls{Tool Calls Present?}\n        CheckToolCalls -- Yes --> HandleTools[ToolCallHandler]\n        CheckToolCalls -- No --> AddToHistory[Add to Message History]\n        HandleTools --> ExecuteFunction[Execute Function]\n        ExecuteFunction --> AgentSwitch{Switch Agent?}\n        AgentSwitch -- Yes --> NewAgent[Set New Active Agent]\n        AgentSwitch -- No --> AddToolResponse[Add Tool Response]\n        NewAgent --> AddToHistory\n        AddToolResponse --> AddToHistory\n        AddToHistory --> NextIteration{Continue Loop?}\n        NextIteration -- Yes --> UserInput\n        NextIteration -- No --> FinalResponse[Return TaskResponse]\n    end\n    \n    Escalate1 --> End([End Conversation])\n    Escalate2 --> End\n    Escalate3 --> End\n    Resolved1 --> End\n    Resolved2 --> End\n    Resolved3 --> End\n    FinalResponse --> End\n    \n    classDef agentNode fill:#f9f,stroke:#333,stroke-width:2px;\n    classDef toolNode fill:#bbf,stroke:#333,stroke-width:1px;\n    classDef decisionNode fill:#ff9,stroke:#333,stroke-width:1px;\n    classDef endNode fill:#9f9,stroke:#333,stroke-width:2px;\n    \n    class TriageAgent,LostBaggageAgent,FlightModificationAgent,FlightCancelAgent,FlightChangeAgent agentNode;\n    class InitSearch,ProcessRefund,IssueCredits,ProcessChange,ExecuteFunction toolNode;\n    class LostBaggage,FlightMod,Cancel,Change,Found,RefundOrCredit,Valid,Available,CheckToolCalls,AgentSwitch,NextIteration,SameFlight decisionNode;\n    class Resolved1,Resolved2,Resolved3,End,FinalResponse endNode;","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":true,"panZoom":true},"time":1742676701348,"type":"auto","id":"1489aee4-4dcc-49c4-aaca-c00f1bb76bd7","name":"ashamed-yacht"},{"state":{"code":"%%{init: {'theme': 'forest'}}%%\nflowchart TD\n    Start([User Query]) --> MainLoop[AppRunner Loop]\n    MainLoop --> TriageAgent{{Triage Agent}}\n    subgraph \"Agent Router\"\n        TriageAgent --> LostBaggage{Is it about\\nlost baggage?}\n        TriageAgent --> FlightMod{Is it about\\nflight modification?}\n        TriageAgent -.-> |Other Queries| Escalate1[Escalate to Human]\n        \n        LostBaggage -- Yes --> |transfer_to_lost_baggage()| LostBaggageAgent\n        FlightMod -- Yes --> |transfer_to_flight_modification()| FlightModificationAgent\n    end\n    \n    subgraph \"Flight Modification Router\"\n        FlightModificationAgent{{Flight Modification Agent}} --> Cancel{Wants to\\ncancel flight?}\n        FlightModificationAgent --> Change{Wants to\\nchange flight?}\n        \n        Cancel -- Yes --> |transfer_to_flight_cancel()| FlightCancelAgent\n        Change -- Yes --> |transfer_to_flight_change()| FlightChangeAgent\n    end\n    \n    subgraph \"Lost Baggage Process\"\n        LostBaggageAgent{{Lost Baggage Agent}} --> |initiate_baggage_search()| InitSearch[Initiate Baggage Search]\n        InitSearch --> Found{Baggage\\nFound?}\n        Found -- Yes --> Deliver[Arrange Delivery]\n        Found -- No --> |escalate_to_human()| Escalate2[Escalate to Human]\n        Deliver --> |case_resolved()| Resolved1[Case Resolved]\n    end\n    \n    subgraph \"Flight Cancellation Process\"\n        FlightCancelAgent{{Flight Cancel Agent}} --> ConfirmFlight[Confirm Flight Details]\n        ConfirmFlight --> SameFlight{Same Flight?}\n        SameFlight -- No --> |escalate_to_human()| Escalate3[Escalate to Human]\n        SameFlight -- Yes --> RefundOrCredit{Refund or\\nCredits?}\n        RefundOrCredit -- Refund --> |initiate_refund()| ProcessRefund[Process Refund]\n        RefundOrCredit -- Credits --> |initiate_flight_credits()| IssueCredits[Issue Flight Credits]\n        ProcessRefund --> RefundNotify[Notify: 3-5 Business Days]\n        IssueCredits --> CreditsNotify[Notify: Available in 15 Minutes]\n        RefundNotify --> |case_resolved()| Resolved2[Case Resolved]\n        CreditsNotify --> |case_resolved()| Resolved2\n    end\n    \n    subgraph \"Flight Change Process\"\n        FlightChangeAgent{{Flight Change Agent}} --> VerifyDetails[Verify Flight Details]\n        VerifyDetails --> |valid_to_change_flight()| Valid{Valid to\\nChange?}\n        Valid -- No --> NotEligible[Inform Customer Not Eligible]\n        Valid -- Yes --> SuggestFlight[Suggest One Day Earlier]\n        SuggestFlight --> CheckSeats[Check Seat Availability]\n        CheckSeats --> Available{Seats\\nAvailable?}\n        Available -- No --> AlternativeFlight[Offer Alternative Flights]\n        Available -- Yes --> InformFees[Inform of Any Fees]\n        InformFees --> |change_flight()| ProcessChange[Process Flight Change]\n        NotEligible --> |case_resolved()| Resolved3[Case Resolved]\n        ProcessChange --> |case_resolved()| Resolved3\n        AlternativeFlight --> |case_resolved()| Resolved3\n    end\n    \n    subgraph \"Agent Communication Flow\"\n        direction LR\n        UserInput[User Message] --> OpenAIRequest[Create OpenAI Request]\n        OpenAIRequest --> LLMResponse[LLM Response]\n        LLMResponse --> CheckToolCalls{Tool Calls\\nPresent?}\n        CheckToolCalls -- Yes --> HandleTools[ToolCallHandler]\n        CheckToolCalls -- No --> AddToHistory[Add to Message History]\n        HandleTools --> ExecuteFunction[Execute Function]\n        ExecuteFunction --> AgentSwitch{Switch\\nAgent?}\n        AgentSwitch -- Yes --> NewAgent[Set New Active Agent]\n        AgentSwitch -- No --> AddToolResponse[Add Tool Response]\n        NewAgent --> AddToHistory\n        AddToolResponse --> AddToHistory\n        AddToHistory --> NextIteration{Continue\\nLoop?}\n        NextIteration -- Yes --> UserInput\n        NextIteration -- No --> FinalResponse[Return TaskResponse]\n    end\n    \n    Escalate1 --> End([End Conversation])\n    Escalate2 --> End\n    Escalate3 --> End\n    Resolved1 --> End\n    Resolved2 --> End\n    Resolved3 --> End\n    FinalResponse --> End\n    \n    classDef agentNode fill:#f9f,stroke:#333,stroke-width:2px;\n    classDef toolNode fill:#bbf,stroke:#333,stroke-width:1px;\n    classDef decisionNode fill:#ff9,stroke:#333,stroke-width:1px;\n    classDef endNode fill:#9f9,stroke:#333,stroke-width:2px;\n    \n    class TriageAgent,LostBaggageAgent,FlightModificationAgent,FlightCancelAgent,FlightChangeAgent agentNode;\n    class InitSearch,ProcessRefund,IssueCredits,ProcessChange,ExecuteFunction toolNode;\n    class LostBaggage,FlightMod,Cancel,Change,Found,RefundOrCredit,Valid,Available,CheckToolCalls,AgentSwitch,NextIteration,SameFlight decisionNode;\n    class Resolved1,Resolved2,Resolved3,End,FinalResponse endNode;","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":false},"time":1742676642349,"type":"auto","id":"360d78c2-0466-40fe-8c39-59df86a5f4e3","name":"fluffy-advantage"},{"state":{"code":"%%{init: {'theme': 'forest'}}%%\nflowchart TD\n    Start([User Query]) --> TriageAgent\n    TriageAgent{{Triage Agent}} --> LostBaggage{Is it about lost baggage?}\n    TriageAgent{{Triage Agent}} --> FlightMod{Is it about flight modification?}\n    \n    LostBaggage -- Yes --> LostBaggageAgent{{Lost Baggage Agent}}\n    FlightMod -- Yes --> FlightModificationAgent{{Flight Modification Agent}}\n    \n    FlightModificationAgent --> Cancel{Wants to cancel flight?}\n    FlightModificationAgent --> Change{Wants to change flight?}\n    \n    Cancel -- Yes --> FlightCancelAgent{{Flight Cancel Agent}}\n    Change -- Yes --> FlightChangeAgent{{Flight Change Agent}}\n    \n    LostBaggageAgent --> InitSearch[Initiate Baggage Search]\n    InitSearch --> Found{Baggage Found?}\n    Found -- Yes --> Deliver[Arrange Delivery]\n    Found -- No --> Escalate[Escalate to Human]\n    \n    FlightCancelAgent --> ConfirmFlight[Confirm Flight Details]\n    ConfirmFlight --> RefundOrCredit{Refund or Credits?}\n    RefundOrCredit -- Refund --> ProcessRefund[Process Refund]\n    RefundOrCredit -- Credits --> IssueCredits[Issue Flight Credits]\n    \n    FlightChangeAgent --> ValidateChange[Check if Change is Valid]\n    ValidateChange --> Valid{Valid to Change?}\n    Valid -- Yes --> SuggestFlight[Suggest Alternative Flight]\n    Valid -- No --> Decline[Decline Change Request]\n    SuggestFlight --> Available{Seats Available?}\n    Available -- Yes --> InformFees[Inform of Any Fees]\n    Available -- No --> AlternativeFlight[Offer Alternative Flights]\n    InformFees --> ProcessChange[Process Flight Change]\n    \n    Deliver --> Resolved[Case Resolved]\n    Escalate --> End([End])\n    ProcessRefund --> Resolved\n    IssueCredits --> Resolved\n    Decline --> Resolved\n    ProcessChange --> Resolved\n    AlternativeFlight --> Resolved\n    Resolved --> End","mermaid":"{\n  \"theme\": \"dark\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":false},"time":1742676582353,"type":"auto","id":"f50cd641-9226-4120-bd7b-a99c79d422b3","name":"embarrassed-mechanic"}]